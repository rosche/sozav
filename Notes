- important outstanding items

    - undo
    - additional options:
	- public money, otherwise display as min/avg/max
	- less verboseness, use this by default
    - sometimes the program takes a really long time to figure out what
      what to discard for a player over hand limit
    - rules not implemented yet:
	- you can sell gems, increase knowledge of gems, then buy gems, but
	  you shouldn't be able to
	    - Z-Man rules don't say anything about this limitation?
	- you can't combine purchases to prevent losing a dust
	    - per the FAQ this can include an item bought at auction, you
	      just have to pay before starting a new auction
    	    - perhaps do this by adding "debt" objects (subclass of
    	      Energy)
		- pay debts before starting auction or at end of turn
		  (or immediately if you buy something on somebody
		  else's turn)
    	    	- but will make the hand count display wrong, need to
    	    	  re-jigger that
	- allow explicitly choosing what to pay with, but default to
	  selecting automatically
	- allow explicitly choosing what to discard for hand limit, but
	  default to selecting automatically

- knapsack problems

    - pick inactive gems to sell when the important thing is hand limit
    - make dust (due to lack of 1 dust)
    	- cost minimized
	- value <= and maximized
    - make dust with hand limit
    	- cost <= and minimized
	- value <= and maximized
    - pay energy
    	- cost maximized
    	- value >= X but as little over as possible
	    - actually want to minimize the hand count of the resulting
	      overpayment combined with existing dust
    	    - sometimes you might want to save the 1 dust, sometimes to
    	      maximize your hand limit.  I think you have to ask the
    	      player if it matters.
	- I think the result can change if you combine purchases vs. doing
	  the same individually, so how to implement combining purchases?

- before release, other items

    - rename from plain "zavandor" due to "Mines of Zavandor"
    - Z-Man rules + 9 Sages
    	- you can look at the cards as soon as you get them?
	- you turn in cards for dust immediately, so (eg) if you got
	  emerald cards and then bought a spellbook you'd be stuck with
	  dust
    	    - even if that's not true, the same thing applies if you
    	      turn it to dust at the start of the next turn rather than
    	      at the end of it
    - how should cards drawn for the fairy's 2 sapphire 9 sages cards be
      affected by "less random start" option?
    - label toad/raven artifacts as such in their descriptions
    - 1-player puzzle mode, need some sort of game timer.
    - telnet access
    	- investigate shellinabox
	- telnet works from Firefox but with prompt
	- telnet doesn't work from IE
	- other solutions
	    - termlib
		- http://www.masswerk.at/termlib/
		- might work without any server-side so check this one
		  out
	    - ajaxterm
	    	- needs server side
		- trying this one
		- use GET by default?
		- bold too hard to see, use exploicit colors, option to
		  turn them off?
	    - anyterm
	    	- needs server side
	    - webtty
	    	- needs server side
	    - webterm (Java)
	    	http://awacs.dhs.org/software/webterm/Documentation/
	    - jcterm (Java, SSH)
	    	http://www.jcraft.com/jcterm/
    - web page
    - knapsack problems (paying for item and discarding when over limit)
    - logging
    	- everything read/written
	- specially formatted logfile
    - cheesy undo via Storable?
    	- can't store GLOB refs

- todo
    - distinction between player name and character name
    - option for which turn order cards to use
    - undo
    - show things you can afford to do
    - search for die/croak, deal more gracefully with some of them
    - many assertion-type tests
    - have unbought sentinels show you the bonus points for each player
    - problems with selling gems
	- selling a gem reports via ui_note that it was deactivated, but
	  not sold
	- don't auto-sell gems when auto-activate-gems is disabled?
	- don't auto-sell a gem of type X when buying a gem of type X
	    - happened when I was switching from diamonds to opals, I
	      deactivated a bunch of diamonds and started buying opals,
	      it would sell an opal then buy an opal
    - when using OPT_AVERAGED_CARDS Dave suggested actually using 7.5 as
      the value for emerald cards, and adding a 0.5 dust type, do this?

- questions
    - are gems limited?
    - is dust limited?
    - what happens if you run out of cards?
    - can't hand limit go over 13 if you have multiple crystal balls?
    - should you be able to decline a free knowledge advancement?

- user interface

    - in-game chatting
    - lobby, with chatting
    - async games with notification
    - AJAX interface

- variations to implement

    - restricted order of actions on your turn
    - bid for characters http://www.boardgamegeek.com/thread/29499

- algorithm for picking energy

Hi, Dominus.  I'm writing a version of the board game The Scepter of
Zavandor (http://www.boardgamegeek.com/game/13884) and I could use some
help with an algorithm.  The problem seems tricky to me, but I wouldn't
be surprised if it had a name and a web site dedicated to it.  I was
hoping you might point me in the right direction.

The player has a group of items which have 2 non-negative integer
properties I'll call $cash and $size.  At certain points during the
game the user isn't allowed to have more than a certain sum of $size
from all their items, so generally you want to hold on to items which
have a high $cash/$size ratio.

There are 2 types of subset picking I need to do with these items.  I'd
guess these are related and might be solved with the same algorithm with
different parameters, but I'm not sure.

    1. When buying something you have to pay a certain amount of
       $cash, and you can get change but only in some (very poor
       ratio) demoninations.  After paying and getting your change
       you'd like to have the smallest total $size you can.

    2. When getting down to your $size limit you want to do it while
       holding on to as much $cash as possible.  This part isn't as
       important (doesn't come up often) because of some other factors
       in the game.

As an added wrinkle, 1 $cash change isn't always available, so you want
to try not to lose that $1 if possible.  (This is an option which will
be true or false for the whole game.)  If the algorithm had to ignore
this part to be simpler that would be okay.

To make things concrete, the items available are like this:

    $cash       $size   ratio   type
    -----       -----   -----   -------------
    1           1       1       dust (used as change)
    2           1       2       dust (used as change)
    5           2       2.5     dust (used as change)
    10          3       3.3     dust (used as change)
    3-17        1       3-17    card
    20-60       3       6.7-20  concentrated

If you can share any thoughts about this I'd be very grateful.
